// Code generated by ent, DO NOT EDIT.

package coupon

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the coupon type in the database.
	Label = "coupon"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldClayfulID holds the string denoting the clayful_id field in the database.
	FieldClayfulID = "_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEndDate holds the string denoting the end_date field in the database.
	FieldEndDate = "end_date"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// Table holds the table name of the coupon in the database.
	Table = "shop_couponall"
)

// Columns holds all SQL columns for coupon fields.
var Columns = []string{
	FieldID,
	FieldClayfulID,
	FieldName,
	FieldEndDate,
	FieldActive,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Coupon queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByClayfulID orders the results by the clayful_id field.
func ByClayfulID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClayfulID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByEndDate orders the results by the end_date field.
func ByEndDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEndDate, opts...).ToFunc()
}

// ByActive orders the results by the active field.
func ByActive(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldActive, opts...).ToFunc()
}
