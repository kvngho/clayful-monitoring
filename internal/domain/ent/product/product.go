// Code generated by ent, DO NOT EDIT.

package product

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the product type in the database.
	Label = "product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldClayfulID holds the string denoting the clayful_id field in the database.
	FieldClayfulID = "clayful_id"
	// FieldClayfulOptions holds the string denoting the clayful_options field in the database.
	FieldClayfulOptions = "clayful_options"
	// Table holds the table name of the product in the database.
	Table = "product_product"
)

// Columns holds all SQL columns for product fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldClayfulID,
	FieldClayfulOptions,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultClayfulID holds the default value on creation for the "clayful_id" field.
	DefaultClayfulID string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)

// OrderOption defines the ordering options for the Product queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByClayfulID orders the results by the clayful_id field.
func ByClayfulID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClayfulID, opts...).ToFunc()
}
